{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\NEXT\\\\batman-next\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"container\",\n  style: {\n    marginTop: \"20px\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"row\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, props.shows.map(show => __jsx(\"div\", {\n  key: show.id,\n  className: \"col-sm-4\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"card mb-3\",\n  style: {\n    width: \"18rem\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"card-body\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, __jsx(\"img\", {\n  className: \"card-img-top\",\n  src: show.image.medium,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}), __jsx(\"div\", {\n  className: \"card-header\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, __jsx(\"h5\", {\n  className: \"card-title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, show.name)), __jsx(\"p\", {\n  className: \"card-text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, \"Prem. Date: \", show.premiered, __jsx(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}), \"Rating: \", show.rating.average, \"  \"), __jsx(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${show.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, __jsx(\"a\", {\n  href: \"#\",\n  className: \"btn btn-primary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"Details\")))))))));\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n  console.log(`Show data fetched. Count: ${data.length}`);\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/HP/Desktop/NEXT/batman-next/pages/index.js"],"names":["Layout","Link","fetch","Index","props","marginTop","shows","map","show","id","width","image","medium","name","premiered","rating","average","getInitialProps","res","data","json","console","log","length","entry"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IACf,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,WAAf;AAA2B,EAAA,KAAK,EAAE;AAACC,IAAAA,SAAS,EAAC;AAAX,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA;AAAK,EAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACCD,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IACjB;AAAK,EAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAmB,EAAA,SAAS,EAAC,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,WAAf;AAA2B,EAAA,KAAK,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEI;AAAK,EAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,cAAf;AAA8B,EAAA,GAAG,EAAEF,IAAI,CAACG,KAAL,CAAWC,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI;AAAK,EAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAI,EAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA4BJ,IAAI,CAACK,IAAjC,CADJ,CAFJ,EAKQ;AAAG,EAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAsCL,IAAI,CAACM,SAA3C,EAAqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAArD,cAAoEN,IAAI,CAACO,MAAL,CAAYC,OAAhF,OALR,EAMQ,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,EAAE,EAAG,MAAKR,IAAI,CAACC,EAAG,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAG,EAAA,IAAI,EAAC,GAAR;AAAY,EAAA,SAAS,EAAC,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CANR,CAFJ,CADJ,CADH,CADD,CADA,CADJ,CADJ;;AA4BAN,KAAK,CAACc,eAAN,GAAwB,kBAAkB;AACtC,QAAMC,GAAG,GAAG,MAAMhB,KAAK,CAAC,8CAAD,CAAvB;AACA,QAAMiB,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BH,IAAI,CAACI,MAAO,EAArD;AAEA,SAAO;AACHjB,IAAAA,KAAK,EAAEa,IAAI,CAACZ,GAAL,CAASiB,KAAK,IAAIA,KAAK,CAAChB,IAAxB;AADJ,GAAP;AAGH,CATD;;AAWA,eAAeL,KAAf","sourcesContent":["import Layout from '../components/MyLayout';\r\nimport Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nconst Index = props => (\r\n    <Layout>\r\n        <div className=\"container\" style={{marginTop:\"20px\"}}>\r\n        <div className=\"row\">\r\n        {props.shows.map(show => (\r\n            <div key={show.id} className=\"col-sm-4\">\r\n                <div className=\"card mb-3\" style={{ width: \"18rem\" }}>\r\n\r\n                    <div className=\"card-body\">\r\n                        <img className=\"card-img-top\" src={show.image.medium} />\r\n                        <div className=\"card-header\">\r\n                            <h5 className=\"card-title\">{show.name}</h5>\r\n                             </div>\r\n                            <p className=\"card-text\">Prem. Date: {show.premiered}<br />Rating: {show.rating.average}  </p>\r\n                            <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\r\n                                <a href=\"#\" className=\"btn btn-primary\">Details</a>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n           \r\n        ))}\r\n         </div>\r\n         </div>\r\n    </Layout>\r\n\r\n);\r\n\r\nIndex.getInitialProps = async function () {\r\n    const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\r\n    const data = await res.json();\r\n\r\n    console.log(`Show data fetched. Count: ${data.length}`);\r\n\r\n    return {\r\n        shows: data.map(entry => entry.show)\r\n    };\r\n};\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}